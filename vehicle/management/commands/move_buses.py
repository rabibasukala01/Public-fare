# Django Management Command
from django.core.management.base import BaseCommand
import time
import requests
import json
import random

route_coordinates = [[85.438013, 27.671368], [85.437598, 27.669828], [85.437561, 27.669682], [85.437532, 27.669552], [85.437462, 27.669241], [85.437375, 27.668945], [85.437321, 27.668748], [85.437283, 27.668629], [85.437179, 27.668305], [85.43711, 27.668154], [85.437057, 27.668069], [85.436618, 27.667582], [85.436526, 27.667451], [85.436476, 27.667307], [85.436457, 27.667002], [85.436457, 27.666635], [85.436478, 27.666498], [85.435987, 27.666499], [85.435755, 27.666499], [85.433848, 27.666495], [85.433015, 27.666512], [85.432897, 27.666493], [85.432604, 27.666486], [85.432347, 27.666448], [85.431789, 27.666239], [85.431454, 27.666096], [85.431189, 27.665983], [85.430137, 27.66554], [85.429578, 27.665301], [85.42938, 27.665244], [85.429288, 27.665232], [85.42918, 27.66524], [85.42833, 27.665338], [85.427976, 27.665383], [85.42783, 27.665402], [85.427268, 27.665493], [85.427236, 27.665499], [85.427161, 27.665475], [85.425941, 27.665639], [85.4256, 27.665673], [85.425014, 27.665703], [85.424199, 27.665707], [85.42369, 27.665729], [85.423074, 27.665782], [85.422395, 27.665853], [85.421685, 27.665947], [85.420117, 27.666162], [85.418909, 27.666328], [85.418615, 27.666389], [85.418273, 27.666479], [85.417891, 27.666613], [85.417187, 27.666903], [85.416905, 27.667037], [85.415851, 27.667551], [85.41096, 27.669843], [85.410432, 27.670115], [85.409859, 27.670503], [85.409423, 27.670897], [85.408847, 27.671372], [85.408418, 27.671658], [85.408021, 27.67182], [85.407739, 27.671915], [85.406777, 27.672189], [85.405285, 27.672598], [85.404151, 27.672883], [85.400136, 27.674021], [85.399611, 27.674168], [85.398991, 27.674319], [85.398519, 27.674413], [85.397652, 27.674537], [85.397483, 27.674542], [85.396543, 27.674562], [85.396049, 27.674545], [85.394136, 27.674323], [85.392194, 27.674067], [85.389813, 27.673753], [85.387692, 27.673468], [85.386315, 27.673279], [85.385874, 27.673252], [85.385431, 27.673203], [85.384712, 27.673163], [85.381154, 27.673355], [85.379786, 27.67346], [85.37403, 27.673883], [85.372916, 27.673951], [85.3649, 27.674422], [85.364284, 27.674447], [85.3622, 27.674594], [85.361005, 27.67466], [85.36051, 27.674688], [85.359517, 27.674749], [85.356411, 27.675004], [85.355716, 27.675051], [85.354878, 27.675105], [85.354259, 27.675139], [85.353302, 27.675174], [85.352795, 27.675176], [85.352204, 27.675199], [85.351942, 27.675223], [85.351712, 27.675268], [85.351369, 27.675364], [85.351052, 27.67549], [85.350867, 27.675583], [85.350602, 27.67575], [85.350463, 27.675861], [85.350194, 27.676108], [85.350083, 27.676231], [85.349883, 27.676516], [85.349725, 27.676814], [85.349589, 27.67724], [85.349556, 27.677573], [85.349545, 27.678011], [85.349533, 27.678788], [85.349528, 27.678938], [85.349495, 27.680469], [85.349455, 27.681663], [85.349331, 27.682627], [85.349198, 27.683178], [85.349058, 27.683518], [85.349122, 27.683697], [85.349236, 27.683861]]

buses = [
    # {"gps_id": 1, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 2, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 3, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 4, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 5, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 6, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 7, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 8, "current_index": random.randint(0, len(route_coordinates) - 1)},
    {"gps_id": 9, "current_index": random.randint(0, len(route_coordinates) - 1)},
    
]

def update_bus_coordinates(bus, new_coords):
    url = "http://127.0.0.1:8000/vehicle/update_coords"
    payload = {
        "gps_id": bus["gps_id"],
        "lat": new_coords[1],
        "lng": new_coords[0]
    }
    headers = {'Content-Type': 'application/json'}
    response = requests.post(url, data=json.dumps(payload), headers=headers)
    return response.status_code == 200

def move_buses_along_route(buses, route_coordinates):
    while True:
        for bus in buses:
            new_coords = route_coordinates[bus["current_index"]]
            success = update_bus_coordinates(bus, new_coords)
            if success:
                print(f"Updated bus {bus['gps_id']} to {new_coords}")
                bus["current_index"] = (bus["current_index"] + 1) % len(route_coordinates)
            else:
                print(f"Failed to update bus {bus['gps_id']}")
        time.sleep(2)  

class Command(BaseCommand):
    help = 'Move buses along the route'

    def handle(self, *args, **kwargs):
        move_buses_along_route(buses, route_coordinates)
